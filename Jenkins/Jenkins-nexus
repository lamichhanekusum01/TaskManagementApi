pipeline {
    agent any

    tools {
        nodejs 'NodeJS' // Assumes you've set up NodeJS in Jenkins Global Tool Configuration
        maven 'Maven'   // Assumes you've set up Maven in Jenkins Global Tool Configuration
    }

    environment {
        SCANNER_HOME = tool 'SonarQubeScanner'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Adjusted for Windows - no nohup needed
                    bat 'npm install'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    bat 'npm run build'
                }
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONARQUBE_SCANNER_PARAMS = "-Dsonar.projectKey=my_project_key -Dsonar.sources=."
            }
            steps {
                script {
                    // Using bat command for Windows compatibility
                    bat "${SCANNER_HOME}/bin/sonar-scanner ${SONARQUBE_SCANNER_PARAMS}"
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    script {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
                        }
                    }
                }
            }
        }

        stage('Publish to Nexus') {
            steps {
                script {
                    bat 'mvn deploy'
                }
            }
        }
    }

    post {
        failure {
            echo 'Pipeline failed.'
        }
    }
}
